; Script generated by the HM NIS Edit Script Wizard.
SetCompress off
; SetCompressor /SOLID lzma
; SetCompressorDictSize 32
RequestExecutionLevel admin
CRCCheck off

;License macros
!define REG_LOCATION_MASTER "Software\Classes\CLSID\{E5BA2C22-F96E-4AA0-B1AC-8498053D0475}"
!define LIC_KEY "18C6802D-BA5A-43E4-8797-EB8E688A7BAF"
!define VALIDITY_DAYS "30"

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "Crystals"
!define PRODUCT_VERSION "1.1.0.0"
!define PRODUCT_PUBLISHER "Camycent"
!define PRODUCT_WEB_SITE "http://www.camycent.com/"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\Crystals.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"
!define MUI_WELCOMEPAGE_TITLE "Welcome to the ${PRODUCT_NAME} Installation"
!define MUI_WELCOMEFINISHPAGE_BITMAP ".\res\side-bar.bmp"

; MUI 1.67 compatible ------
!addplugindir ".\res"
!include "MUI.nsh"
!include "x64.nsh"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON ".\res\icon.ico"
!define MUI_UNICON ".\res\icon.ico"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!define MUI_FINISHPAGE_RUN "$INSTDIR\Crystals.exe"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

; MUI end ------
VIProductVersion "${PRODUCT_VERSION}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "FileDescription" "${PRODUCT_NAME} Installer"
VIAddVersionKey /LANG=${LANG_ENGLISH} "CompanyName" "Camycent Solutions"
VIAddVersionKey /LANG=${LANG_ENGLISH} "ProductName" "${PRODUCT_NAME} Installer"
VIAddVersionKey /LANG=${LANG_ENGLISH} "Comments" "${PRODUCT_NAME} Installer"
VIAddVersionKey /LANG=${LANG_ENGLISH} "LegalCopyright" "Copyright © 2015 Camycent Solutions Pvt Ltd"
VIAddVersionKey /LANG=${LANG_ENGLISH} "FileVersion" "${PRODUCT_VERSION}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "ProductVersion" "${PRODUCT_VERSION}"

Name "${PRODUCT_NAME}"
OutFile "${PRODUCT_NAME} Setup.exe"
InstallDir "$PROGRAMFILES\Camycent\Crystals"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show
ShowUnInstDetails show
BrandingText "www.camycent.com"

Function GetTime
	!define GetTime `!insertmacro GetTimeCall`
 
	!macro GetTimeCall _FILE _OPTION _R1 _R2 _R3 _R4 _R5 _R6 _R7
		Push `${_FILE}`
		Push `${_OPTION}`
		Call GetTime
		Pop ${_R1}
		Pop ${_R2}
		Pop ${_R3}
		Pop ${_R4}
		Pop ${_R5}
		Pop ${_R6}
		Pop ${_R7}
	!macroend
 
	Exch $1
	Exch
	Exch $0
	Exch
	Push $2
	Push $3
	Push $4
	Push $5
	Push $6
	Push $7
	ClearErrors
 
	StrCmp $1 'L' gettime
	StrCmp $1 'A' getfile
	StrCmp $1 'C' getfile
	StrCmp $1 'M' getfile
	StrCmp $1 'LS' gettime
	StrCmp $1 'AS' getfile
	StrCmp $1 'CS' getfile
	StrCmp $1 'MS' getfile
	goto error
 
	getfile:
	IfFileExists $0 0 error
	System::Call /NOUNLOAD '*(i,l,l,l,i,i,i,i,&t260,&t14) i .r6'
	System::Call /NOUNLOAD 'kernel32::FindFirstFileA(t,i)i(r0,r6) .r2'
	System::Call /NOUNLOAD 'kernel32::FindClose(i)i(r2)'
 
	gettime:
	System::Call /NOUNLOAD '*(&i2,&i2,&i2,&i2,&i2,&i2,&i2,&i2) i .r7'
	StrCmp $1 'L' 0 systemtime
	System::Call /NOUNLOAD 'kernel32::GetLocalTime(i)i(r7)'
	goto convert
	systemtime:
	StrCmp $1 'LS' 0 filetime
	System::Call /NOUNLOAD 'kernel32::GetSystemTime(i)i(r7)'
	goto convert
 
	filetime:
	System::Call /NOUNLOAD '*$6(i,l,l,l,i,i,i,i,&t260,&t14)i(,.r4,.r3,.r2)'
	System::Free /NOUNLOAD $6
	StrCmp $1 'A' 0 +3
	StrCpy $2 $3
	goto tolocal
	StrCmp $1 'C' 0 +3
	StrCpy $2 $4
	goto tolocal
	StrCmp $1 'M' tolocal
 
	StrCmp $1 'AS' tosystem
	StrCmp $1 'CS' 0 +3
	StrCpy $3 $4
	goto tosystem
	StrCmp $1 'MS' 0 +3
	StrCpy $3 $2
	goto tosystem
 
	tolocal:
	System::Call /NOUNLOAD 'kernel32::FileTimeToLocalFileTime(*l,*l)i(r2,.r3)'
	tosystem:
	System::Call /NOUNLOAD 'kernel32::FileTimeToSystemTime(*l,i)i(r3,r7)'
 
	convert:
	System::Call /NOUNLOAD '*$7(&i2,&i2,&i2,&i2,&i2,&i2,&i2,&i2)i(.r5,.r6,.r4,.r0,.r3,.r2,.r1,)'
	System::Free $7
 
	IntCmp $0 9 0 0 +2
	StrCpy $0 '0$0'
	IntCmp $1 9 0 0 +2
	StrCpy $1 '0$1'
	IntCmp $2 9 0 0 +2
	StrCpy $2 '0$2'
	IntCmp $6 9 0 0 +2
	StrCpy $6 '0$6'
 
	StrCmp $4 0 0 +3
	StrCpy $4 Sunday
	goto end
	StrCmp $4 1 0 +3
	StrCpy $4 Monday
	goto end
	StrCmp $4 2 0 +3
	StrCpy $4 Tuesday
	goto end
	StrCmp $4 3 0 +3
	StrCpy $4 Wednesday
	goto end
	StrCmp $4 4 0 +3
	StrCpy $4 Thursday
	goto end
	StrCmp $4 5 0 +3
	StrCpy $4 Friday
	goto end
	StrCmp $4 6 0 error
	StrCpy $4 Saturday
	goto end
 
	error:
	SetErrors
	StrCpy $0 ''
	StrCpy $1 ''
	StrCpy $2 ''
	StrCpy $3 ''
	StrCpy $4 ''
	StrCpy $5 ''
	StrCpy $6 ''
 
	end:
	Pop $7
	Exch $6
	Exch
	Exch $5
	Exch 2
	Exch $4
	Exch 3
	Exch $3
	Exch 4
	Exch $2
	Exch 5
	Exch $1
	Exch 6
	Exch $0
FunctionEnd

Function .onInit
  ;If installer already running stop installing
  System::Call 'kernel32::CreateMutex(i 0, i 0, t "${PRODUCT_NAME}") ?e'
  Pop $R0
  StrCmp $R0 0 +3
  MessageBox MB_OK "The installer is already running."
  Abort
  
	NsisCrypt::Base64Encode "$EXEPATH"
	Pop $1
	WriteRegStr HKCU ${REG_LOCATION_MASTER} "InstallerPath" "$1"
FunctionEnd
  
Section "NETFramework"
   ClearErrors
    ReadRegDWORD $0 HKLM "SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full" "Release"

    IfErrors NotDetected

    ${If} $0 >= 378389

        DetailPrint "Microsoft .NET Framework 4.5 is installed ($0)"
    ${Else}
    NotDetected:
        DetailPrint "Installing Microsoft .NET Framework 4.5"
        SetDetailsPrint listonly
		SetOutPath "$TEMP\"
		File ".\packages\NETFramework\dotnetfx45_full_x86_x64.exe"		
        ExecWait '"$TEMP\dotnetfx45_full_x86_x64.exe" /passive /norestart' $0
        ${If} $0 == 3010 
        ${OrIf} $0 == 1641
            DetailPrint "Microsoft .NET Framework 4.5 installer requested reboot"
            SetRebootFlag true
        ${EndIf}
        SetDetailsPrint lastused
        DetailPrint "Microsoft .NET Framework 4.5 installer returned $0"
    ${EndIf}
SectionEnd

Section "LocalDB"
	SetRegView 64
	ReadRegStr $1 HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{AB8DE9BA-19E1-446A-BCFA-6B3DA9751E21}" "DisplayName"
	${If} $1 == ""
		SetOutPath "$TEMP\"
		${If} ${RunningX64}
			File ".\packages\LocalDB\x64\SqlLocalDB.msi"
		${Else}
			File ".\packages\LocalDB\x86\SqlLocalDB.msi"
		${EndIf}
		ExecWait 'msiexec /i "$TEMP\SqlLocalDB.msi" /qn IACCEPTSQLLOCALDBLICENSETERMS=YES' $0
		DetailPrint "Database installer returned $0" 
	${EndIf}
	SetRegView 32
SectionEnd

Section "MainSection" SEC01
	SetOutPath "$INSTDIR"
	SetOverwrite on
	File /r ".\Application\*.*"

	CreateDirectory "$SMPROGRAMS\Crystals"
	CreateShortCut "$SMPROGRAMS\Crystals\Crystals.lnk" "$INSTDIR\Crystals.exe"
	CreateShortCut "$DESKTOP\Crystals.lnk" "$INSTDIR\Crystals.exe"
  
	;;LicKey
	NsisCrypt::Base64Encode "${LIC_KEY}"
	Pop $1
	WriteRegStr HKCU ${REG_LOCATION_MASTER} "LicKey" "$1"
	
	;;Validity 
	NsisCrypt::Base64Encode "${VALIDITY_DAYS}"
	Pop $1
	WriteRegStr HKCU ${REG_LOCATION_MASTER} "ValidityDays" "$1"
	
	;;InstallDate
	Var /GLOBAL day
	Var /GLOBAL month
	Var /GLOBAL year
	Var /GLOBAL dayOfweek
	Var /GLOBAL hour
	Var /GLOBAL min
	Var /GLOBAL sec
  	${GetTime} "" "LS" $day $month $year $dayOfweek $hour $min $sec
	; $0="01"      day
	; $1="04"      month
	; $2="2005"    year
	; $3="Friday"  day of week name
	; $4="11"      hour
	; $5="05"      minute
	; $6="50"      seconds
 
	NsisCrypt::Base64Encode "$month/$day/$year"
	Pop $1
	WriteRegStr HKCU ${REG_LOCATION_MASTER} "InstallDate" "$1"
	
	;;LastRun
	WriteRegStr HKCU ${REG_LOCATION_MASTER} "LastRun" "$1"
	
	;;DataPath
	NsisCrypt::Base64Encode "$LOCALAPPDATA\Camycent\Crystals"
	Pop $1
	WriteRegStr HKCU ${REG_LOCATION_MASTER} "DataPath" "$1"

	;;AccessControl::GrantOnFile "$INSTDIR" "Everyone" "FullAccess"
	
SectionEnd

Section -AdditionalIcons
  CreateShortCut "$SMPROGRAMS\Crystals\Uninstall.lnk" "$INSTDIR\uninst.exe"
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR\Crystals.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\Crystals.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd

Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully removed from your computer."
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove $(^Name) and all of its components?" IDYES +2
  Abort
FunctionEnd

Section Uninstall
  Delete "$SMPROGRAMS\Crystals\Uninstall.lnk"
  Delete "$DESKTOP\Crystals.lnk"
  Delete "$SMPROGRAMS\Crystals\Crystals.lnk"

  RMDir /r "$SMPROGRAMS\Crystals"
  RMDir /r "$INSTDIR"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY}"
  SetAutoClose true
SectionEnd
